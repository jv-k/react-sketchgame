{"version":3,"sources":["components/SketchGame/components/Logo/Logo.js","components/SketchGame/components/Button/Button.js","components/SketchGame/components/Checkbox/Checkbox.js","components/SketchGame/providers/gameProvider.js","components/SketchGame/providers/roundProvider.js","components/SketchGame/hooks/useGameContext.js","components/SketchGame/components/StatusCard/StatusCard.js","components/SketchGame/hooks/useRoundContext.js","components/SketchGame/components/Canvas/Canvas.js","components/SketchGame/components/AnswerCard/AnswerCard.js","components/SketchGame/utils/utils.js","components/SketchGame/components/QuestionCard/QuestionCard.js","components/SketchGame/utils/sounds.js","components/SketchGame/components/Controls/Controls.js","components/SketchGame/components/GameRound/GameRound.js","utils/utils.js","components/SketchGame/hooks/useRounds.js","components/SketchGame/hooks/useRoundDecider.js","components/SketchGame/hooks/useTimer.js","components/SketchGame/hooks/useLocalStorage.js","views/home/Home.js","components/SketchGame/reducers/pointReducer.js","components/SketchGame/SketchGame.js","components/SketchGame/SketchGame.config.js","views/game/Game.js","views/result/Result.js","routes.js","serviceWorker.js","index.js"],"names":["Logo","className","ButtonElem","props","onClick","click","style","id","label","Button","route","to","linkClassName","linkStyle","buttonClassName","Checkbox","isChecked","onChange","checked","setChecked","useState","type","e","target","GameContext","React","createContext","displayName","GameProvider","Provider","RoundContext","RoundProvider","useGameContext","useContext","StatusCard","gameState","roundState","timeSize","Math","round","timeLimit","timeLeft","index","noRounds","value","max","height","Canvas","forwardRef","ref","lastX","lastY","mouseDown","setMouseDown","useEffect","canvas","current","context","getContext","fillStyle","fillRect","width","onMouseDown","onMouseUp","undefined","onMouseMove","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","strokeStyle","lineWidth","lineJoin","beginPath","moveTo","lineTo","closePath","stroke","drawLine","handleMousemove","AnswerCard","getRandomNumber","limit","multiple","randomNumber","floor","random","QuestionCard","Component","constructor","super","getQuestion","wonLastRound","this","msgs","isFirstRound","currentRound","intro","pointScore","length","pointLose","pause","question","replace","questionSuffix","state","timeRef","createRef","isTyped","typed","componentDidUpdate","el","document","getElementById","innerText","componentDidMount","Typed","strings","typeSpeed","onComplete","self","callBack","componentWillUnmount","destroy","render","contextType","GameSFX","cfg","play","soundOn","sfx","loaded","start","Tone","on","console","log","stop","silence","Object","keys","map","dispose","path","toMaster","clear","game_lose","game_win","point_win","point_lose","time_tick","time_warn","theme","quit","Controls","withRouter","useLocalStorage","clearCanvas","canvasRef","NextBtnCallBack","dialog","showModal","history","push","method","GameRound","currentLabel","score","startTiming","setStartTiming","startTimer","stopTimer","useTimer","roundDecider","isGameOver","useRoundDecider","pathname","renderRedirect","getPrediction","theCanvas","model","tensor","tf","fromPixels","resizeNearestNeighbor","mean","expandDims","toFloat","div","then","loadedModel","predict","data","async","prediction","useRounds","labels","randomiseLabels","labelsShuffled","useMemo","array","temporaryValue","randomIndex","currentIndex","arrayShuffle","slice","rounds","Array","apply","key","setGameOver","setCurrentRound","dispatch","setWonLastRound","finalRound","timeToCountDown","setTimeLeft","isActive","setIsActive","interval","setInterval","clearInterval","call","resetTimer","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","error","valueToStore","Function","setItem","stringify","typedConfig","backSpeed","backDelay","startDelay","Home","setSoundOn","stringsElement","minHeight","href","pointReducer","pointsState","action","SketchGame","config","useReducer","backgroundColor","SketchGameConfig","modelPath","loadModel","require","win","low","high","perfect","sound","lose","Game","Result","location","scoreFactored","wonPerfect","wonHigh","wonLow","loseLow","msg","soundFX","setTimeout","Icon","whiteSpace","Rating","stars","f","h","t","split","lookup","Routes","exact","component","ErrorBoundary","errorInfo","componentDidCatch","setState","children","Boolean","hostname","match","ReactDOM","basename","process","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e182405.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Logo = () => {\n  return(\n    <h1>Sketch!<i className=\"snes-jp-logo is-large ml-2\"></i></h1>\n  );\n}","// A customised flexible button component\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ButtonElem = (props) => {\n  return (\n    <button \n      className={ \"nes-btn\" + (props.className ? \" \" + props.className : \"\") }\n      onClick={ props.click }\n      style={ props.style }\n      id={ props.id }\n    >\n      { props.label }\n    </button>\n  )\n}\n\nexport const Button = (props) => {\n  if (props.route)\n    return (\n      <Link \n        to={ props.route } \n        className={ props.className || props.linkClassName } \n        style={ props.style || props.linkStyle }\n        onClick={ props.click }\n      >\n        <ButtonElem \n          label={ props.label }\n          className={ props.buttonClassName }\n          id={ props.id }\n        />\n      </Link>\n    ) \n  else \n    return (    \n      <ButtonElem {...props} />\n    );\n}","import React, { useState } from \"react\";\n\nexport const Checkbox = ({ isChecked, onChange, id }) => {\n\n  const [ checked, setChecked ] = useState(isChecked);\n  \n  return (\n    <label className=\"mr-5\">\n      <input \n        type=\"checkbox\" \n        className=\"nes-checkbox\"\n        checked={ checked }\n        onChange={ (e) => {\n          setChecked(e.target.checked);\n          onChange(e.target.checked);\n        }}\n        id={ id }\n      />\n      <span>Sound</span>\n    </label>  \n  );\n}","import React from \"react\";\n\nexport const GameContext = React.createContext();\nGameContext.displayName = 'GameContext';\nexport const GameProvider = GameContext.Provider;","import React from \"react\";\n\nexport const RoundContext = React.createContext();\nRoundContext.displayName = 'RoundContext';\nexport const RoundProvider = RoundContext.Provider;","import { useContext } from \"react\";\nimport { GameContext } from \"../providers\";\n\nexport const useGameContext = () => {\n  return useContext(GameContext);\n};","import React from \"react\";\nimport { useGameContext, useRoundContext } from \"../../hooks\";\n\nexport const StatusCard = () => {\n\n  const gameState = useGameContext();\n  const roundState = useRoundContext();\n  \n  const timeSize = 100 - Math.round((gameState.timeLimit - roundState.timeLeft) / gameState.timeLimit * 100);\n\n  return(\n    <div className=\"nes-container is-centered is-rounded mb-3\">\n      <p className=\"\">Round { roundState.index + 1 } of { gameState.noRounds }</p>\n      <progress \n        // make the progress bar red if timer > 80%  \n        className={ \n          \"m-0 nes-progress \"\n           + (() => {\n              if (timeSize === 100) return \"is-pattern is-faded\"\n              else if (timeSize < 20) return \"is-error\"\n              else return \"is-success\"\n           })()\n        } \n        value={ timeSize } \n        max=\"100\" \n        style={{ height: \"28px\" }}\n      />\n    </div>\n  );\n}\n","import { useContext } from \"react\";\nimport { RoundContext } from \"../providers\";\n\nexport const useRoundContext = () => {\n  return useContext(RoundContext);\n};","import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nexport const Canvas = React.forwardRef((props, ref) => {\n\n  // had to use state in order not to lose the mousedown when parent re-renders\n  let [ mouseDown, setMouseDown ] = useState(false);\n  \n  let lastX;\n  let lastY;\n\n  function drawLine(canvas, x, y, lastX, lastY) {\n    let context = canvas.getContext(\"2d\");\n\n    context.strokeStyle = \"#000000\";\n    context.lineWidth = 12;\n    context.lineJoin = \"round\";\n\n    context.beginPath();\n    context.moveTo(lastX, lastY);\n    context.lineTo(x, y);\n    context.closePath();\n    context.stroke();\n\n    return [x, y];\n  }\n\n  const handleMouseup = () => {\n    setMouseDown(false);\n    [lastX, lastY] = [undefined, undefined];\n  };\n\n  const handleMousemove = e => {\n    const rect = e.target.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    if (mouseDown) {\n      [lastX, lastY] = drawLine(e.target, x, y, lastX, lastY);\n    }\n  };\n\n  useEffect(() => {\n    const canvas = ref.current;\n    const context = canvas.getContext(\"2d\");\n\n    context.fillStyle = \"#ffffff\";\n    context.fillRect(0, 0, canvas.height, canvas.width);\n\n  }, [ref]);\n\n  return (\n    <canvas\n      height={ 300 }\n      width={ 300 }\n      ref={ ref }\n      onMouseDown={ () => setMouseDown(true) }\n      onMouseUp = { handleMouseup }\n      onMouseMove = { e => handleMousemove(e) }\n    />\n  );\n});\n\nexport const clearCanvas = (ref) => {\n  const canvas = ref.current;\n  const ctx = canvas.getContext(\"2d\");\n  ctx.fillRect(0, 0, canvas.height, canvas.width);\n}\n","import React from \"react\";\nimport { Canvas } from \"../Canvas\";\n\nexport const AnswerCard = React.forwardRef((props, ref) => {\n  return(\n    <div className=\"nes-container is-rounded mb-3 p-0\" style={{ width: \"310px\", height: \"310px\"}}>\n      <Canvas ref={ ref } />\n    </div>  \n  );\n});","export function useRandomNumbers() {\n  const limit = 9;\n  const num1 = getRandomNumber(limit);\n  const num2 = getRandomNumber(limit, num1);\n  return [num1, num2];\n}\n\nexport function getRandomNumber(limit, multiple = 0) {\n  const randomNumber = Math.floor(Math.random() * limit);\n  if (randomNumber * multiple < 10) {\n    return randomNumber;\n  }\n  return getRandomNumber(limit, multiple);\n}\n","import React from \"react\";\nimport { GameContext } from \"../../providers\";\nimport { getRandomNumber } from \"../../utils\";\n\nimport Typed from 'typed.js';\n\nexport class QuestionCard extends React.Component {\n\n  static contextType = GameContext;\n\n  constructor(props) {\n    super();\n    this.state = {\n      timeRef: React.createRef(),\n      isTyped: false\n    }\n    this.typed = {};\n  }\n\n  getQuestion = () => {\n    const { wonLastRound } = this.context;\n    const msgs = this.context.msgs;\n    const isFirstRound = (this.context.currentRound === 0);\n\n    const intro = (() => {\n      if (isFirstRound) \n        return msgs.intro\n      else if (wonLastRound) \n        return msgs.pointScore[getRandomNumber(msgs.pointScore.length)]\n      else\n        return msgs.pointLose[getRandomNumber(msgs.pointLose.length)]\n    })();\n\n    return  intro \n          + msgs.pause \n          + msgs.question\n            .replace(\"{{label}}\", this.props.label)\n            .replace(\"{{timeLeft}}\", this.props.timeLeft)\n          + (isFirstRound ? msgs.questionSuffix : \"!\");\n  }\n\n  componentDidUpdate() {\n    // since the element is inside the typed element, we can only perfectly\n    // reference it directly via DOM (easiest method I found):\n    const el = document.getElementById(\"timeLeft\");\n    if (el !== null) el.innerText = this.props.timeLeft;\n  }\n  \n  componentDidMount() {\n    const typedConfig = { typeSpeed: 20 };\n    \n    // start text animation\n    this.typed = new Typed(  \n      '.msgTxt', { \n        strings: [\n          this.getQuestion()\n        ], \n        ...typedConfig, \n        onComplete: (self) => { \n          // tell GameRound provider to start the timer when text typing is done:\n          this.props.callBack();\n        } \n      }\n    );\n  }\n\n  componentWillUnmount() {\n    this.typed.destroy();\n  }\n      \n  render() {\n    return(\n      <>\n        <div className=\"nes-balloon from-right w-100 mt-1\">\n            <span className=\"msgTxt\"></span>\n        </div>\n        <i className=\"nes-mario reflect-h float-right\"></i>\n      </>\n    )\n  }\n}\n\n","// just a wrapper around Tone.js for playing sfx\nimport * as Tone from \"tone\";\n\nconst GameSFXConfig = {\n  path: \"./assets/sounds/\",\n  sfx: {\n    click: \"btn.wav\",\n    clear: \"clear.wav\",\n    game_lose:  \"game_lose.wav\",\n    game_win:   \"game_win.wav\",\n    point_win: \"point_win.wav\", \n    point_lose: \"point_lose.wav\", \n    time_tick: \"time_seconds.wav\", \n    time_warn: \"time_warning.wav\",\n    theme: \"theme.wav\",\n    quit:  \"point_lose.wav\"\n  }\n}\n\nclass SFXPlayer {\n  constructor(cfg){\n    // load sounds\n    this.sfx = {};\n    Object.keys(cfg.sfx).map((id) =>\n      this.sfx[id] = new Tone.Player(cfg.path + cfg.sfx[id]).toMaster()\n    );\n  }\n\n  play = (id, soundOn) => {\n    if (soundOn) {\n      if (this.sfx[id].loaded) {\n        this.sfx[id].start();\n      } else {\n        Tone.Buffer.on(\"load\", () => {\n          this.sfx[id].start();\n        });\n      }\n      console.log(\"SFX: \", id);\n    }\n  }\n\n  stop = (id) => {\n    this.sfx[id].stop();    \n  }\n\n  silence = () => {\n    Object.keys(this.sfx).map((id) =>\n      this.sfx[id].stop()\n    );\n  }\n\n  destroy = () => {\n    Object.keys(this.sfx).map((id) =>\n      this.sfx[id].dispose()\n    );\n  }\n}\n\nexport const GameSFX = new SFXPlayer(GameSFXConfig);","import React from \"react\";\nimport { withRouter } from 'react-router-dom' \n\nimport { Button } from \"../Button\";\nimport { clearCanvas } from \"../Canvas\";\nimport { GameSFX } from \"../../utils/sounds.js\";\n\nimport { useLocalStorage } from \"../../hooks\";\n\n export const Controls = withRouter((props) => {\n\n  const [ soundOn ] = useLocalStorage(\"soundOn\");\n\n  return(\n    <div className=\"row\">\n      <div className=\"col\">\n      <Button \n          label=\"Clear\" \n          click={() => { \n            clearCanvas(props.canvasRef);\n            GameSFX.play(\"clear\", soundOn);\n          }} \n          className=\"is-warning\"\n        /> \n        <Button \n          label=\"Next >\" \n          click={() => props.NextBtnCallBack() } \n          className=\"is-success\"\n          id=\"btn-next\"\n        /> \n      </div>\n      <div className=\"col\"> \n        <Button \n          label=\"Quit\" \n          click={() => {\n            GameSFX.play(\"click\", soundOn);\n            var dialog = document.getElementById('dialog-rounded');\n            if (dialog.showModal !== undefined)\n              dialog.showModal()\n            else \n              props.history.push('/');\n          }}\n          className=\"float-right\"\n          id=\"btn-quit\"\n        />  \n        <dialog className=\"nes-dialog is-rounded\" id=\"dialog-rounded\">\n          <form method=\"dialog\">\n            <p>Are you sure?!</p>\n            <menu className=\"dialog-menu\">\n              <Button \n                label=\"Quit!\"\n                route=\"/home\"\n                className=\"nes-btn is-primary\"\n                click={() => { \n                  GameSFX.silence();\n                  GameSFX.play(\"quit\", soundOn);\n                }}                \n                id=\"btn-quit-final\"\n                />\n              <button className=\"nes-btn\">Cancel</button>\n            </menu>\n          </form>\n        </dialog>        \n      </div>\n    </div>\n  );\n});","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { RoundProvider } from \"../../providers\";\n\nimport { useGameContext } from  \"../../hooks\";\nimport { useRoundDecider } from \"../../hooks\";\nimport { useTimer } from  \"../../hooks\";\n\nimport { StatusCard } from  \"../StatusCard\";\nimport { AnswerCard } from \"../AnswerCard\";\nimport { QuestionCard } from \"../QuestionCard\";\nimport { Controls }  from \"../Controls\";\n\n\nlet canvasRef = React.createRef();\n\nexport const GameRound = ({ index, currentLabel, timeLimit }) => {\n \n  const { score, noRounds, msgs } = useGameContext();\n\n  // this is set to true when typing animation is complete:\n  // reset upon each round, as previous round sets it to `true`\n  const [ startTiming, setStartTiming ] = useState(false);  \n\n  // set-up timer:\n  const { timeLeft, startTimer, stopTimer } = useTimer( \n    timeLimit, \n    // callback for when timer is done – does all the HEAVY lifting\n    // NB: caroundDecider can be invoked prematurely with 'next' button\n    () => {\n      roundDecider()\n    }\n  );\n  const { roundDecider, isGameOver } = useRoundDecider({ currentLabel, canvasRef, stopTimer });\n\n  // if game rounds are over, go to the next round\n  const renderRedirect = () => {\n    if (isGameOver) \n      return (\n        <Redirect to={{\n          pathname: \"/result\",\n          state: {\n            score: score,\n            noRounds: noRounds,\n            msgs: msgs\n          }\n        }} />\n      );\n  }\n  \n  useEffect(() => {\n    if (startTiming) {\n      startTimer();\n      console.log(\"GR: startTiming!\");\n    }\n    return () => { stopTimer() };\n  }, [startTiming]);\n\n  return (\n    <RoundProvider value={{ index, currentLabel, timeLeft, canvasRef }}>\n      { renderRedirect() }\n      <div className=\"row\">\n        <div className=\"col\">\n          <StatusCard />\n        </div>\n      </div>\n      <div className=\"row align-items-end\">  \n        <div className=\"col\">          \n          <AnswerCard ref={ canvasRef } />\n        </div>\n        <div className=\"col mr-3 mb-2\">\n          {/* this component's class-based, so can't use 2 contexts - so forced to supply these props w/refactoring */}\n          <QuestionCard \n            label={ currentLabel } \n            timeLeft={ timeLeft } \n            callBack={ ()=> setStartTiming(true) }\n          />\n        </div>\n      </div>\n      <Controls canvasRef={ canvasRef } NextBtnCallBack={ roundDecider }/>\n    </RoundProvider>      \n  );\n};\n","import * as tf from \"@tensorflow/tfjs\";\n\nfunction preprocessCanvas(canvas) {\n  // Preprocess image for the network\n  let tensor = tf\n    .browser\n    .fromPixels(canvas.current) // Shape: (300, 300, 3) - RGB image\n    .resizeNearestNeighbor([28, 28]) // Shape: (28, 28, 3) - RGB image\n    .mean(2) // Shape: (28, 28) - grayscale\n    .expandDims(2) // Shape: (28, 28, 1) - network expects 3d values with channels in the last dimension\n    .expandDims() // Shape: (1, 28, 28, 1) - network makes predictions for \"batches\" of images\n    .toFloat(); // Network works with floating points inputs\n  return tensor.div(255.0); // Normalize [0..255] values into [0..1] range\n}\n\nfunction getPrediction(theCanvas, model) {\n  const tensor = preprocessCanvas(theCanvas);\n  return model\n    .then(loadedModel => loadedModel.predict(tensor).data())\n    .then(async prediction => await tf.argMax(prediction).data()); // returns an int32 containing the predicted class\n}\n\nasync function loadModel(modelPath) {\n  console.log(\"TF: Model loading...\");\n  // load the model using a HTTPS request (where you have stored your model files)\n  return await tf\n    .loadLayersModel(modelPath)\n    .then(console.log(\"TF: Model loaded.\"));\n}\n\n// algorithm: https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\nconst arrayShuffle = (array) => {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport { getPrediction, loadModel, arrayShuffle };","import React from \"react\";\nimport { GameRound } from  \"../components/GameRound\";\nimport { arrayShuffle } from \"utils\";\n\n// returns an array collection of JSX round components\nexport function useRounds({ currentRound, noRounds, timeLimit, labels, randomiseLabels }) {\n  \n  // Memoize label so that randomisation doesn't re-occur per round. This was a nice solution.\n  // Because: change of state in ancestor's context triggers re-render to all child components as mention in:\n  // https://reactjs.org/docs/hooks-reference.html#usecontext\n  const labelsShuffled = React.useMemo(() => {\n    return (randomiseLabels) ? arrayShuffle(labels.slice()) : labels;\n  },[]);\n\n  let rounds = Array.apply(null, { length: noRounds });\n  rounds = rounds.map((round, index) => {  \n    // only make visible the currentRound\n    return (currentRound === index) ? (\n      <GameRound\n        index={ index } key={ index }\n        timeLimit={ timeLimit }\n        currentLabel={ labelsShuffled[index] }\n      />\n    ) : null\n  });\n\n  return { rounds };\n}\n","import { useState, useEffect } from \"react\";\n\nimport { useGameContext } from  \".\";\nimport { useLocalStorage } from \".\";\n\nimport { getPrediction } from \"utils\";\nimport { GameSFX } from \"../utils/sounds.js\";\n\n// This fn performs the ML prediction and determines success + failure\nexport const useRoundDecider = ({ canvasRef, currentLabel, stopTimer }) => {\n\n  const [ isGameOver, setGameOver ] = useState(false);\n  const [ soundOn ] = useLocalStorage(\"soundOn\");\n   \n  const { \n    model, \n    labels, \n    currentRound, \n    setCurrentRound, \n    noRounds,\n    score,\n    dispatch,\n    setWonLastRound\n  } = useGameContext();\n\n  const finalRound = currentRound === noRounds;\n\n  const roundDecider = () => \n    (isGameOver) ? null :\n      getPrediction(canvasRef, model).then(prediction => {\n        console.log(\"expectation: \" + currentLabel, \"VS prediction: \" + labels[prediction[0]]);\n\n        if (labels[prediction[0]] === currentLabel) { \n          // WON ROUND!\n          dispatch({ type: \"ADD_POINTS\" });\n          setWonLastRound(true);\n          if (!finalRound) GameSFX.play(\"point_win\", soundOn);\n        } else {\n          // LOST ROUND!\n          setWonLastRound(false);\n          if (!finalRound) GameSFX.play(\"point_lose\", soundOn);\n        }\n        \n        if (currentRound < noRounds - 1) {\n          // go to next round if it's not last round\n          setCurrentRound(currentRound + 1);\n        } else {\n          // if last round, wrap it up!\n          setGameOver(true);\n          GameSFX.stop(\"theme\"); // in case it's playing\n          stopTimer(); \n          console.log(\"END GAME!\");\n        }\n      });\n  \n  useEffect(() => {\n    console.log(\"Score:\", score, \"/\", noRounds);\n  }, [currentRound, isGameOver]);\n\n  return { roundDecider, isGameOver };\n};\n","import { useState, useEffect } from 'react';\n\nexport const useTimer = (timeToCountDown, callBack) => {\n  const [timeLeft, setTimeLeft] = useState(timeToCountDown);\n  const [isActive, setIsActive] = useState(false);\n\n  function start() {\n    setIsActive(true);\n  }\n\n  function stop() {\n    setIsActive(false);\n  }\n\n  function reset() {\n    stop();\n    setTimeLeft(timeToCountDown);\n  }\n\n  useEffect(() => {\n    if (isActive) {\n      const interval = setInterval(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n\n      if (timeLeft === 0) {\n        stop();\n        clearInterval(interval);\n        callBack.call();\n        return;\n      }\n  \n      // clear interval on re-render to avoid memory leaks\n      return () => clearInterval(interval);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isActive, timeLeft]);\n\n  return { \n    timeLeft: timeLeft, \n    startTimer: () => start(),\n    stopTimer: () => stop(),\n    resetTimer: ()=> reset()\n  }\n};","import { useState } from \"react\";\n\n// Hook\nexport const useLocalStorage = (key, initialValue) => {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}","import React, { useEffect } from \"react\";\n\nimport { Logo } from \"components/SketchGame/components/Logo\";\nimport { Button } from \"components/SketchGame/components/Button\";\nimport { Checkbox } from \"components/SketchGame/components/Checkbox/Checkbox\";\n\nimport { useLocalStorage } from \"components/SketchGame/hooks\";\n\nimport { GameSFX } from \"components/SketchGame/utils/sounds.js\";\n\nimport Typed from 'typed.js';\nconst typedConfig = {\n  typeSpeed: 20,\n  backSpeed: 10,\n  backDelay: 50,\n  startDelay: 500\n};\n\nexport const Home = () => {\n\n  // save to local storage so that components that use SFX can respect the app setting:\n  const [ soundOn, setSoundOn ] = useLocalStorage(\"soundOn\");\n  if (soundOn === undefined) setSoundOn(true);\n   \n  useEffect(() => {\n    // mount:\n    let typed = new Typed(\n      '.typed-msg', \n      { ...typedConfig, stringsElement: \".typed-src\" },\n    );\n\n    // cleanup:\n    return () => {\n      typed.destroy();\n    }\n  },[]);\n\n  return (\n    <div className=\"h-100 d-flex align-items-center\">\n      <div className=\"container-sm\">\n        <Logo />\n        <section className=\"message\">\n          <div \n            className=\"nes-balloon from-left d-block\"\n            style={{ minHeight: \"4.3em\" }}\n          >\n            <div className=\"typed-src d-none\">\n              <p>This game has been modeled on Google's <a href=\"https://quickdraw.withgoogle.com/data\">Quick, Draw!</a>^2000</p>\n              <p>^1000Brought to you by <span className=\"text-primary\">@jvkdev</span> and <span className=\"text-danger\">Super Mari</span>^500</p>\n              <p>Brought to you by <span className=\"text-primary\">@jvkdev</span> and <span className=\"text-danger\">EPFL Extension School</span> <i className=\"nes-icon heart align-middle\"></i></p>\n            </div>\n            <div><span className=\"typed-msg\"></span></div>\n          </div>\n        </section>\n\n        <i className=\"nes-octocat animate float-left\"></i>\n        <div className=\"float-right\">\n          <Checkbox \n            isChecked={ soundOn } \n            onChange={ setSoundOn }\n            id=\"option-sound\"\n          />\n          <Button \n            route=\"/game\"\n            click={() => {\n              GameSFX.play(\"click\", soundOn);\n              GameSFX.play(\"theme\", soundOn);\n            }}\n            id=\"btn-play\"\n            label=\"Play Game >\" \n            className=\"mt-3\"\n            buttonClassName=\"is-success\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const pointReducer = (pointsState, action) => {\n  switch (action.type) {\n    case \"RESET_POINTS\":\n      return 0;\n    case \"ADD_POINTS\":\n      return pointsState + 1;\n    case \"REMOVE_POINTS\":\n      return pointsState - 1;\n    default:\n      return pointsState;\n  }\n};","import React, { useReducer, useState } from \"react\";\n\nimport { Logo } from \"./components/Logo\";\n\nimport { GameProvider } from \"./providers\";\nimport { pointReducer } from \"./reducers\";\nimport { useRounds } from \"./hooks\";\n\n// styles\nimport \"./SketchGame.css\";\nimport \"nes.css/css/nes.min.css\";\n\nexport const SketchGame = ({ config }) => {\n\n  const [ score, dispatch ] = useReducer(pointReducer, 0);\n  const [ currentRound, setCurrentRound ] = useState(0);\n    \n  // this is used to determine the nature of the speech bubble in the next round,\n  // ie, to taunt or congratulate!\n  const [ wonLastRound, setWonLastRound ] = useState(false); \n\n  const state = {\n    score,\n    dispatch,\n    currentRound,\n    setCurrentRound,\n    wonLastRound,\n    setWonLastRound\n  }\n\n  // Note: can't pass these by context (useRounds isn't mounted and GameProvider context n/a yet):\n  const { rounds } = useRounds({ ...config, currentRound });\n\n  return(  \n    <>\n      <Logo />      \n      <div className=\"nes-container is-rounded p-2\" style={{ backgroundColor: \"rgba(0,0,0,0)\"}} >\n\n        <GameProvider value={{ ...config, ...state }}>\n          { rounds }\n        </GameProvider>\n\n      </div>\n    </>\n  );\n}","import { loadModel } from 'utils';\n\nexport const SketchGameConfig = {\n  config: {\n    noRounds: 10,\n    timeLimit: 20, // seconds\n\n    model: loadModel('./assets/models/model.json'),\n    labels: require(\"../../labels.json\"),\n    randomiseLabels: true,\n\n    msgs: {\n      intro: \"Let's get started.\",\n      question: \"You have <span id=\\\"timeLeft\\\">{{timeLeft}}</span> seconds to draw a <span class=\\\"text-danger\\\">{{label}}</span>\",\n      questionSuffix: \" in the box!\", // only for the first round\n      pointScore: [\n        \"Not bad at all!\",\n        \"That was a fine sketch!\",\n        \"You're good!\",\n        \"Drawing is your forté!\",\n        \"Very arty!\",\n        \"Is that you, Picasso..?\"\n      ],\n      pointLose: [\n        \"Need some drawing lessons...?!\", \n        \"Don't forget to wear your glasses...!\",\n        \"You can do better...!\",\n        \"Mehhh!\",\n        \"Don't give up your dayjob just yet.\",\n        \"No AI would understand that ;)\"\n      ],\n      win:  {\n        low: \"Good effort! Your score could be better. Give it another go!\", \n        high: \"Well done! Have you considered selling your masterpieces?\",\n        perfect: \"Maestro! You win! You got them all correct :)\",\n        sound: \"game_win\"\n      },\n      lose: {\n        low: \"Oops... Try harder next time! Maybe you can score more than {{score}}!\",\n        high: \"Almost there, but not quite!\",\n        sound: \"game_lose\"\n      },\n      pause: \"^500 \"\n    }\n  }\n};","import React from \"react\";\nimport { SketchGame } from \"components/SketchGame\";\nimport { SketchGameConfig } from \"components/SketchGame/SketchGame.config.js\";\n\nexport const Game = () => {  \n  return (\n    <div className=\"h-100 d-flex align-items-center\">\n      <div className=\"container-sm\">        \n        <SketchGame { ...SketchGameConfig } />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { Button } from \"components/SketchGame/components/Button\";\nimport { Logo } from \"components/SketchGame/components/Logo\";\n\nimport { useLocalStorage } from \"components/SketchGame/hooks\";\nimport { GameSFX } from \"components/SketchGame/utils/sounds.js\";\n\nimport Typed from 'typed.js';\nconst typedConfig = {\n  typeSpeed: 20,\n  startDelay: 500\n};\n\nexport const Result = (props) => {\n\n  const { score, noRounds, msgs } = props.location.state;\n  const [ soundOn ] = useLocalStorage(\"soundOn\");\n\n  // Set all the scores\n  const scoreFactored = Math.round(score / noRounds * 10);\n  \n  let wonPerfect = false;\n  let wonHigh = false;\n  let wonLow = false;\n  let loseLow = false;\n  // let loseHigh = false;\n\n  if (scoreFactored === 10) wonPerfect = true\n  else if (scoreFactored >= 8) wonHigh = true\n  else if (scoreFactored >= 6) wonLow = true\n  // else if (scoreFactored >= 4) loseHigh = true\n  else loseLow = true;\n\n  const msg = (() => {\n    if (wonPerfect) return msgs.win.perfect\n    else if (wonHigh) return msgs.win.high\n    else if (wonLow) return msgs.win.low\n    else if (loseLow) return msgs.lose.low.replace(\"{{score}}\", scoreFactored)\n    else return msgs.lose.high; // Loseerrrrrr with big L\n  })();\n\n  useEffect(() => {\n    let soundFX = \"\";\n    if (wonHigh || wonLow || wonPerfect)\n      soundFX = msgs.win.sound\n    else \n      soundFX = msgs.lose.sound;\n      \n    setTimeout(() =>\n      GameSFX.play(soundFX, soundOn)\n    , 1000);\n\n    // mount:\n    let typed = new Typed(\n      '.typed-msg', {\n        ...typedConfig, \n        strings: [msg]\n      },\n    );\n\n    // cleanup:\n    return () => {\n      typed.destroy();\n    }\n  },[]);  \n\n  return (\n    <div className=\"h-100 d-flex align-items-center\">\n      <div className=\"container-sm\">\n        <Logo />\n        <div className=\"nes-container is-rounded p-2\" style={{ backgroundColor: \"rgba(0,0,0,0)\", minHeight: \"10em\"}}>\n          <div className=\"row align-content-center justify-content-center m-4\" style={{ height:\"6em\" }}>\n            <div className=\"nes-container is-rounded\">\n              <div className=\"row align-items-center\">\n                <Icon {...{ wonHigh, wonLow, wonPerfect }}/>\n                <div className=\"col\" style={{whiteSpace: \"nowrap\"}}>\n                  <Rating {...{ scoreFactored }}/>\n                </div>\n                <div className=\"col\">\n                  <h5 className=\"text-info pt-1\">Score:</h5> \n                  <h5 className=\"\">{ score } / { noRounds}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row align-items-end\">\n            <div className=\"col-sm-0 col-md-4 col-lg-6\"></div>\n            <div className=\"col-sm   col-md-8 col-lg-6\">\n              <section className=\"message\">\n                <div \n                  className=\"nes-balloon from-right d-block\"\n                  style={{ minHeight: \"4.3em\" }} \n                >\n                  <div><span className=\"typed-msg\"></span></div>\n                </div>\n              </section>\n            </div>\n          </div>\n          <div className=\"row align-items-end\">\n            <div className=\"col\">\n              <div className=\"float-left pt-4\">\n                <Button \n                  route=\"/game\"\n                  label=\"Play Again\" \n                />\n                <Button \n                  route=\"/home\"\n                  label=\"Home\" \n                />\n              </div>\n            </div>\n            <div className=\"col\">\n              <i className=\"nes-charmander float-right\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// too minor to be in it's own file\nconst Rating = ({ scoreFactored }) => {\n  const star_lookup = [\n    \"t.t.t.t.t\",//0\n    \"h.t.t.t.t\",//1\n    \"f.t.t.t.t\",//2\n    \"f.h.t.t.t\",//3\n    \"f.f.t.t.t\",//4\n    \"f.f.h.t.t\",//5\n    \"f.f.f.t.t\",//6\n    \"f.f.f.h.t\",//7\n    \"f.f.f.f.t\",//8\n    \"f.f.f.f.h\",//9\n    \"f.f.f.f.f\"//10\n  ];\n  const stars = {\n    f: <i className=\"nes-icon star\" />,\n    h: <i className=\"nes-icon star is-half\" />,\n    t: <i className=\"nes-icon star is-transparent\" />\n  };\n  return star_lookup[scoreFactored].split('.').map((lookup, index) => {\n    return <span key={ index }>{ stars[lookup] }</span>;\n  });\n}\n\n// too minor to be in it's own file\nconst Icon = ({ wonPerfect, wonHigh, wonLow }) => {\n  if(wonPerfect || wonHigh) \n    return(\n      <div className=\"col\" style={{}}>\n        <i className=\"nes-icon trophy is-large\"></i>\n      </div>\n    )\n  else if (wonLow) \n    return (\n      <div className=\"col\" style={{}}>\n        <i className=\"nes-icon coin is-large\"></i>\n      </div>\n    )\n  else return null;\n  /*\n    else if (loseHigh) \n    return <i className=\"nes-icon like is-large reflect-v\"></i>\n  else \n    return <i className=\"nes-icon like is-large reflect-v\"></i>\n  */\n};","import React from 'react';\n\nimport { Home } from './views/home';\nimport { Game } from './views/game';\nimport { Result } from './views/result';\n\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nexport const Routes = () => {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to='/home' />\n        </Route>\n        <Route path=\"/home\" component={ Home } />\n        <Route path=\"/game\" component={ Game } />\n        <ErrorBoundary> \n          {/* Handle error: navigating to /result will result in an error,\n              as props.location isn't passed, normally it's passed by the router from /game */}\n          <Route path=\"/result\" component={ Result } />\n        </ErrorBoundary>          \n      </Switch>\n    </>\n  )\n}\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n  \n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    })\n  }\n  \n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <>\n          <div className=\"h-100 d-flex align-items-center\">\n            <div className=\"container-sm text-center\">\n              <h2>Oops.... </h2>\n              <h2>Something went wrong!</h2>\n            </div>\n          </div>\n        </>\n      );\n    } else {\n      // No error, just render children\n      return this.props.children;\n    }\n  }  \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* \nTitle:\n  Sketch Game – EPFL EXTS React UI course final project\nAuthor: \n  John Valai kamaly\nLicense: ISC\n\nHere are some of the rules which I followed, in order to create a discoverable, neat, easy to maintain+test+debug,\nand to follow the paradigm of separation of concerns:\n\nVIEWS + ROUTES\n  – Routing logic is placed insde router.js\n  – Each page is a react component, in the views folder\n  – Each view has a route that triggers it\n  – A page component uses other components to assemble the page like lego blocks\n  – Route logic is mostly non-reusable, means view components are not reusable,\n    but we want the components inside the components directory to be reusable\n\nCOMPONENTS\n  – All components are inside components directory\n  - All components are inside a dedicated components directory, in a separate file. \n  – Components are highly discoverable and neat and easily re-usable\n  – Each components has it's main file with the same Pascal-case name\n  – Each component doesn't use default export, it avoid confusion when importing\n    – Rather, it's exported in it's own index.js and neatly imported without using the .js extension\n  – Highly re-usable components kept in shared folder\n  - Components are functional, unless they really need to be class-based\n  – Presentational components are provided data via props/context\n  – Container component w/game logic control the state, and contain presentation components\n  – \n*/\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Routes } from './routes';\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"./styles/index.scss\";\n\n// This will prepend necessary path and make router work in each environment: local as well as production\n// for relative paths to work when app is served from a directory other than root\nReactDOM.render(\n  <Router basename={ process.env.PUBLIC_URL }>\n    <Routes/>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}